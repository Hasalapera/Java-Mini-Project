/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ASUS
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;


public class Lec_Marks extends javax.swing.JFrame {

    /**
     * Creates new form Lec_Marks
     */
    public Lec_Marks() {
        initComponents();
        refreshTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Markid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Stuid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        marktext = new javax.swing.JTextField();
        Addbtn = new javax.swing.JButton();
        Deletebtn = new javax.swing.JButton();
        MarkType = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        MarkTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Marks");
        setBackground(new java.awt.Color(102, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Adobe Garamond Pro Bold", 0, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Marks");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Mark-ID :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Student-ID :");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mark :");

        Addbtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Addbtn.setText("Add");
        Addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddbtnActionPerformed(evt);
            }
        });

        Deletebtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Deletebtn.setText("Delete");
        Deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletebtnActionPerformed(evt);
            }
        });

        MarkType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quiz_01", "Quiz_02", "Quiz_03", "Quiz_04", "Assignment", "Mid_theory", "Mid_practical", "End_theory", "End_practical" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(14, 14, 14)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(44, 44, 44))
                                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addGap(35, 35, 35)))
                                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(Addbtn)
                                                                        .addComponent(jLabel3))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(Markid, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(Stuid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(marktext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(Deletebtn)))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(74, 74, 74)
                                                .addComponent(MarkType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(Markid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(Stuid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(MarkType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(marktext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Addbtn)
                                        .addComponent(Deletebtn))
                                .addContainerGap(53, Short.MAX_VALUE))
        );

        jScrollPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        MarkTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null, null, null}
                },
                new String [] {
                        "Mark ID", "Student ID", "Lec ID", "Course ID", "Assignment", "Quiz 01", "Quiz 02", "Quiz 03", "Quiz 04", "Mid Theory", "Mid Practical", "End Theory", "End Practical"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        MarkTable.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        MarkTable.setShowGrid(true);
        jScrollPane4.setViewportView(MarkTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1164, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(30, 30, 30)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(370, 370, 370)
                                                .addComponent(jLabel1)))
                                .addGap(0, 40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(30, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>

    private String Lecid(){
        String Lecid;
        Leclog leclog = new Leclog();
        Lecid=leclog.Lecid;
        return Lecid;
    }

    private String coursecode(){
        String Lecid=Lecid();
        String Course_code=null;
        String url = "jdbc:mysql://localhost:3306/techmis";
        String user = "root";
        String password = "";

        try {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            Connection con = DriverManager.getConnection(url, user, password);
            PreparedStatement pstm = con.prepareStatement("select Course_code from course where Lec_id=?");
            pstm.setString(1,Lecid);
            ResultSet rs = pstm.executeQuery();
            if(rs.next()){
                Course_code=rs.getString("Course_code");
            }
        }catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        return Course_code;
    }

    private void refreshTableData(){
        String Lecid = Lecid();
        String url = "jdbc:mysql://localhost:3306/techmis";
        String user = "root";
        String password = "";
        try {

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
        }catch (ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e);
        }
        Connection conn = DriverManager.getConnection(url, user, password);
        PreparedStatement pst = conn.prepareStatement("SELECT * FROM marks WHERE Lec_id=?"); {

                pst.setString(1, Lecid);
                ResultSet rs = pst.executeQuery();

                DefaultTableModel model=new DefaultTableModel();

                model.addColumn("Mark_id");
                model.addColumn("Stu_id");
                model.addColumn("Lec_id");
                model.addColumn("Course_id");
                model.addColumn("Assignment");
                model.addColumn("Quiz_01");
                model.addColumn("Quiz_02");
                model.addColumn("Quiz_03");
                model.addColumn("Quiz_04");
                model.addColumn("Mid_theory");
                model.addColumn("Mid_practical");
                model.addColumn("End_theory");
                model.addColumn("End_practical");

                while (rs.next()) {
                    model.addRow(new Object[]{
                            rs.getString("Mark_id"),
                            rs.getString("Stu_id"),
                            rs.getString("Lec_id"),
                            rs.getString("Course_id"),
                            rs.getString("Assignment"),
                            rs.getString("Quiz_01"),
                            rs.getString("Quiz_02"),
                            rs.getString("Quiz_03"),
                            rs.getString("Quiz_04"),
                            rs.getString("Mid_Theory"),
                            rs.getString("Mid_Practical"),
                            rs.getString("End_Theory"),
                            rs.getString("End_Practical")
                    });
                }
                MarkTable.setModel(model);
            }
        } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
    }

    private void deleteRecordFromTable(String markId){
        String url = "jdbc:mysql://localhost:3306/techmis";
        String user = "root";
        String password = "";

        try {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            Connection con = DriverManager.getConnection(url, user, password);
            PreparedStatement pstm = con.prepareStatement("DELETE FROM marks WHERE Mark_id=?");
            pstm.setString(1,markId);
            int rowsAffected = pstm.executeUpdate();
            if(rowsAffected<0){
                JOptionPane.showMessageDialog(this, "No record was deleted", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }catch (SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void AddbtnActionPerformed(java.awt.event.ActionEvent evt) {
        String url = "jdbc:mysql://localhost:3306/techmis";
        String user = "root";
        String password = "";

        String Lecid = Lecid();
        String coursecode = coursecode();
        String studentId = Stuid.getText();
        String MarkID = Markid.getText();
        String markType = (String) MarkType.getSelectedItem();
        String mark = marktext.getText();

        if (studentId.isEmpty() || MarkID.isEmpty() || mark.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields");
            return;
        }
        double markValue;
        try {
            markValue = Double.parseDouble(mark);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Please enter a valid numeric mark");
            return;
        }
        try {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException e) {
                JOptionPane.showMessageDialog(null, e);
            }
            // 1. Check if student + course already exists
            Connection conn = DriverManager.getConnection(url, user, password);
            PreparedStatement checkStmt = conn.prepareStatement("SELECT * FROM marks WHERE Stu_id=? AND Course_id=?");
            checkStmt.setString(1, studentId);
            checkStmt.setString(2, coursecode);
            ResultSet rs = checkStmt.executeQuery();

            // 2. If not exists, insert with all zero values
            if (!rs.next()) {
                // Prepare the SQL query to insert values into the table
                PreparedStatement insertStmt = conn.prepareStatement(
                        "INSERT INTO marks (Mark_id,Stu_id, Lec_id, Course_id, Assignment, Quiz_01, Quiz_02, Quiz_03, Quiz_04, Mid_theory, Mid_practical, End_theory, End_practical) " +
                                "VALUES (?,?, ?, ?, 0, 0, 0, 0, 0, 0, 0, 0,0)");

                // Set the parameters for the SQL statement
                insertStmt.setString(1, MarkID);
                insertStmt.setString(2, studentId);
                insertStmt.setString(3, Lecid);
                insertStmt.setString(4, coursecode);
                // The remaining values are default 0, as specified in the query.

                // Execute the update
                insertStmt.executeUpdate();
            }


            // 3. Update the selected category with the actual mark
            String updateQuery = "UPDATE marks SET " + markType + "=? WHERE Stu_id=? AND Course_id=?";
            PreparedStatement updateStmt = conn.prepareStatement(updateQuery);
            updateStmt.setDouble(1, markValue);
            updateStmt.setString(2, studentId);
            updateStmt.setString(3, coursecode);
            updateStmt.executeUpdate();

            JOptionPane.showMessageDialog(null, "Mark updated successfully!");

            Stuid.setText("");
            Markid.setText("");
            marktext.setText("");
            MarkType.setSelectedIndex(0);

            refreshTableData();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void DeletebtnActionPerformed(java.awt.event.ActionEvent evt) {
       int selectedRow = MarkTable.getSelectedRow();
       if (selectedRow == -1) {
           JOptionPane.showMessageDialog(this, "Please select a row to delete", "No Selection", JOptionPane.WARNING_MESSAGE);
       }
       else {String markID = MarkTable.getModel().getValueAt(selectedRow, 0).toString();
           int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
           if (confirm == JOptionPane.YES_OPTION) {
               deleteRecordFromTable(markID);
               refreshTableData();
           }}

    }

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lec_Marks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lec_Marks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lec_Marks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lec_Marks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lec_Marks().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton Addbtn;
    private javax.swing.JButton Deletebtn;
    private javax.swing.JTable MarkTable;
    private javax.swing.JComboBox<String> MarkType;
    private javax.swing.JTextField Markid;
    private javax.swing.JTextField Stuid;
    private javax.swing.JButton Updatebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField marktext;
    // End of variables declaration
}
